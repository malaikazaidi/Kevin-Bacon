<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.6 on linux)" generated="20200302 13:45:33.941" rpa="false">
<suite id="s1" name="testPutAndGetTests" source="/virtual/maramgan/a1-repos/a1-repos/a1-02-27-2020-07-17-58/testPutAndGetTests.robot">
<test id="s1-t1" name="TestAddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.095" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.095" endtime="20200302 13:45:34.095"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.095" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.095" endtime="20200302 13:45:34.095"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Swetha Maramganty</arg>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.095" level="INFO">${params} = {'name': 'Swetha Maramganty', 'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200302 13:45:34.095" endtime="20200302 13:45:34.095"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.096" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Swetha Maramganty", "actorId": "nm1"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.134" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.096" endtime="20200302 13:45:34.134"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.134" endtime="20200302 13:45:34.135"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.094" endtime="20200302 13:45:34.135" critical="yes"></status>
</test>
<test id="s1-t2" name="Test2AddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.135" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.135" endtime="20200302 13:45:34.136"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.136" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.136" endtime="20200302 13:45:34.136"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Arnold Rosenbloom</arg>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.136" level="INFO">${params} = {'name': 'Arnold Rosenbloom', 'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200302 13:45:34.136" endtime="20200302 13:45:34.136"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.137" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Arnold Rosenbloom", "actorId": "nm2"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.147" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.136" endtime="20200302 13:45:34.147"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.147" endtime="20200302 13:45:34.147"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.135" endtime="20200302 13:45:34.147" critical="yes"></status>
</test>
<test id="s1-t3" name="TestAddKevinBacon200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.148" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.148" endtime="20200302 13:45:34.148"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.148" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.148" endtime="20200302 13:45:34.148"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Kevin Bacon</arg>
<arg>actorId=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.149" level="INFO">${params} = {'name': 'Kevin Bacon', 'actorId': 'nm0000102'}</msg>
<status status="PASS" starttime="20200302 13:45:34.148" endtime="20200302 13:45:34.149"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.149" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Kevin Bacon", "actorId": "nm0000102"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.155" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.149" endtime="20200302 13:45:34.155"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.155" endtime="20200302 13:45:34.155"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.147" endtime="20200302 13:45:34.156" critical="yes"></status>
</test>
<test id="s1-t4" name="Test3AddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.156" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.156" endtime="20200302 13:45:34.156"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.157" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.156" endtime="20200302 13:45:34.157"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Ilir Dema</arg>
<arg>actorId=nm3</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.157" level="INFO">${params} = {'name': 'Ilir Dema', 'actorId': 'nm3'}</msg>
<status status="PASS" starttime="20200302 13:45:34.157" endtime="20200302 13:45:34.157"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.157" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Ilir Dema", "actorId": "nm3"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.164" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.157" endtime="20200302 13:45:34.164"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.164" endtime="20200302 13:45:34.164"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.156" endtime="20200302 13:45:34.164" critical="yes"></status>
</test>
<test id="s1-t5" name="TestAddActorKeepExistingNode400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.165" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.165" endtime="20200302 13:45:34.165"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.165" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.165" endtime="20200302 13:45:34.165"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Shabaz Badshah</arg>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.166" level="INFO">${params} = {'name': 'Shabaz Badshah', 'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200302 13:45:34.166" endtime="20200302 13:45:34.166"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.166" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Shabaz Badshah", "actorId": "nm2"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.172" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.166" endtime="20200302 13:45:34.173"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.173" endtime="20200302 13:45:34.173"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.165" endtime="20200302 13:45:34.173" critical="yes"></status>
</test>
<test id="s1-t6" name="TestAddActorBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.174" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.173" endtime="20200302 13:45:34.174"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.174" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.174" endtime="20200302 13:45:34.174"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Emma Stone</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.174" level="INFO">${params} = {'name': 'Emma Stone'}</msg>
<status status="PASS" starttime="20200302 13:45:34.174" endtime="20200302 13:45:34.174"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.175" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Emma Stone"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.177" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.174" endtime="20200302 13:45:34.177"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.177" endtime="20200302 13:45:34.177"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.173" endtime="20200302 13:45:34.177" critical="yes"></status>
</test>
<test id="s1-t7" name="TestAddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.178" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.178" endtime="20200302 13:45:34.178"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.179" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.178" endtime="20200302 13:45:34.179"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Up</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.179" level="INFO">${params} = {'name': 'Up', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200302 13:45:34.179" endtime="20200302 13:45:34.179"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.179" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Up", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.185" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.179" endtime="20200302 13:45:34.185"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.185" endtime="20200302 13:45:34.185"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.178" endtime="20200302 13:45:34.185" critical="yes"></status>
</test>
<test id="s1-t8" name="Test2AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.186" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.186" endtime="20200302 13:45:34.186"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.186" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.186" endtime="20200302 13:45:34.186"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Harry Potter</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.187" level="INFO">${params} = {'name': 'Harry Potter', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200302 13:45:34.186" endtime="20200302 13:45:34.187"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.187" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Harry Potter", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.193" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.187" endtime="20200302 13:45:34.193"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.193" endtime="20200302 13:45:34.194"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.185" endtime="20200302 13:45:34.194" critical="yes"></status>
</test>
<test id="s1-t9" name="Test3AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.195" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.194" endtime="20200302 13:45:34.195"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.195" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.195" endtime="20200302 13:45:34.196"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Patriots Day</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.196" level="INFO">${params} = {'name': 'Patriots Day', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200302 13:45:34.196" endtime="20200302 13:45:34.196"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.196" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Patriots Day", "movieId": "mv001"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.201" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.196" endtime="20200302 13:45:34.201"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.201" endtime="20200302 13:45:34.201"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.194" endtime="20200302 13:45:34.202" critical="yes"></status>
</test>
<test id="s1-t10" name="Test4AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.202" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.202" endtime="20200302 13:45:34.202"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.203" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.202" endtime="20200302 13:45:34.203"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=LOTR</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.203" level="INFO">${params} = {'name': 'LOTR', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200302 13:45:34.203" endtime="20200302 13:45:34.203"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.203" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "LOTR", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.208" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.203" endtime="20200302 13:45:34.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.208" endtime="20200302 13:45:34.209"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.202" endtime="20200302 13:45:34.209" critical="yes"></status>
</test>
<test id="s1-t11" name="Test5AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.209" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.209" endtime="20200302 13:45:34.210"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.210" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.210" endtime="20200302 13:45:34.210"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=RV</arg>
<arg>movieId=mv003</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.210" level="INFO">${params} = {'name': 'RV', 'movieId': 'mv003'}</msg>
<status status="PASS" starttime="20200302 13:45:34.210" endtime="20200302 13:45:34.210"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.211" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "RV", "movieId": "mv003"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.216" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.210" endtime="20200302 13:45:34.216"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.216" endtime="20200302 13:45:34.216"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.209" endtime="20200302 13:45:34.217" critical="yes"></status>
</test>
<test id="s1-t12" name="TestAddMovieKeepExistingNode400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.217" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.217" endtime="20200302 13:45:34.217"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.218" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.217" endtime="20200302 13:45:34.218"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Cinderalla</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.218" level="INFO">${params} = {'name': 'Cinderalla', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200302 13:45:34.218" endtime="20200302 13:45:34.218"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.219" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Cinderalla", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.223" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.218" endtime="20200302 13:45:34.223"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.223" endtime="20200302 13:45:34.224"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.217" endtime="20200302 13:45:34.224" critical="yes"></status>
</test>
<test id="s1-t13" name="TestAddMovieBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.224" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.224" endtime="20200302 13:45:34.225"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.225" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.225" endtime="20200302 13:45:34.225"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Graduation</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.225" level="INFO">${params} = {'name': 'Graduation'}</msg>
<status status="PASS" starttime="20200302 13:45:34.225" endtime="20200302 13:45:34.225"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.225" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Graduation"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.230" level="FAIL">ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))</msg>
<status status="FAIL" starttime="20200302 13:45:34.225" endtime="20200302 13:45:34.230"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200302 13:45:34.224" endtime="20200302 13:45:34.230" critical="yes">ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))</status>
</test>
<test id="s1-t14" name="TestAddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.231" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.231" endtime="20200302 13:45:34.231"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.231" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.231" endtime="20200302 13:45:34.231"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.232" level="INFO">${params} = {'actorId': 'nm1', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200302 13:45:34.232" endtime="20200302 13:45:34.232"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.233" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm1", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.239" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.232" endtime="20200302 13:45:34.239"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.239" endtime="20200302 13:45:34.239"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.230" endtime="20200302 13:45:34.239" critical="yes"></status>
</test>
<test id="s1-t15" name="Test2AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.240" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.240" endtime="20200302 13:45:34.240"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.240" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.240" endtime="20200302 13:45:34.240"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.241" level="INFO">${params} = {'actorId': 'nm1', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200302 13:45:34.240" endtime="20200302 13:45:34.241"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.241" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm1", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.247" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.241" endtime="20200302 13:45:34.247"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.247" endtime="20200302 13:45:34.248"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.239" endtime="20200302 13:45:34.248" critical="yes"></status>
</test>
<test id="s1-t16" name="Test3AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.249" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.248" endtime="20200302 13:45:34.249"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.249" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.249" endtime="20200302 13:45:34.249"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.249" level="INFO">${params} = {'actorId': 'nm3', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200302 13:45:34.249" endtime="20200302 13:45:34.249"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.250" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm3", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.256" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.249" endtime="20200302 13:45:34.256"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.256" endtime="20200302 13:45:34.256"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.248" endtime="20200302 13:45:34.256" critical="yes"></status>
</test>
<test id="s1-t17" name="Test4AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.257" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.257" endtime="20200302 13:45:34.257"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.257" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.257" endtime="20200302 13:45:34.257"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.257" level="INFO">${params} = {'actorId': 'nm3', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200302 13:45:34.257" endtime="20200302 13:45:34.257"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.258" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm3", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.264" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.258" endtime="20200302 13:45:34.264"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.264" endtime="20200302 13:45:34.264"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.256" endtime="20200302 13:45:34.264" critical="yes"></status>
</test>
<test id="s1-t18" name="Test5AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.265" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.265" endtime="20200302 13:45:34.265"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.265" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.265" endtime="20200302 13:45:34.265"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.266" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200302 13:45:34.265" endtime="20200302 13:45:34.266"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.266" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv001"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.271" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.266" endtime="20200302 13:45:34.271"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.271" endtime="20200302 13:45:34.272"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.264" endtime="20200302 13:45:34.272" critical="yes"></status>
</test>
<test id="s1-t19" name="Test6AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.272" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.272" endtime="20200302 13:45:34.273"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.273" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.273" endtime="20200302 13:45:34.273"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.273" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200302 13:45:34.273" endtime="20200302 13:45:34.273"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.274" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.279" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.273" endtime="20200302 13:45:34.279"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.280" endtime="20200302 13:45:34.280"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.272" endtime="20200302 13:45:34.280" critical="yes"></status>
</test>
<test id="s1-t20" name="Test7AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.281" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.280" endtime="20200302 13:45:34.281"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.281" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.281" endtime="20200302 13:45:34.281"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv003</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.281" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv003'}</msg>
<status status="PASS" starttime="20200302 13:45:34.281" endtime="20200302 13:45:34.281"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.282" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv003"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.288" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.281" endtime="20200302 13:45:34.288"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.288" endtime="20200302 13:45:34.289"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.280" endtime="20200302 13:45:34.289" critical="yes"></status>
</test>
<test id="s1-t21" name="TestAddRelationBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.289" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.289" endtime="20200302 13:45:34.290"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.290" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.290" endtime="20200302 13:45:34.290"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.290" level="INFO">${params} = {'actor': 'nm0000102'}</msg>
<status status="PASS" starttime="20200302 13:45:34.290" endtime="20200302 13:45:34.290"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.290" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actor": "nm0000102"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.294" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.290" endtime="20200302 13:45:34.294"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.294" endtime="20200302 13:45:34.294"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.289" endtime="20200302 13:45:34.295" critical="yes"></status>
</test>
<test id="s1-t22" name="TestAddRelationMovieNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.295" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.295" endtime="20200302 13:45:34.295"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.296" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.295" endtime="20200302 13:45:34.296"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.296" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200302 13:45:34.296" endtime="20200302 13:45:34.296"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.296" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "notexist"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.301" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.296" endtime="20200302 13:45:34.301"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200302 13:45:34.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.301" endtime="20200302 13:45:34.301"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.295" endtime="20200302 13:45:34.301" critical="yes"></status>
</test>
<test id="s1-t23" name="TestAddRelationActorNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.302" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.302" endtime="20200302 13:45:34.302"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.302" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.302" endtime="20200302 13:45:34.302"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.303" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200302 13:45:34.302" endtime="20200302 13:45:34.303"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.303" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "notexist", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.308" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.303" endtime="20200302 13:45:34.308"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200302 13:45:34.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.308" endtime="20200302 13:45:34.309"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.301" endtime="20200302 13:45:34.309" critical="yes"></status>
</test>
<test id="s1-t24" name="TestAddRelationBothNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.309" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.309" endtime="20200302 13:45:34.310"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.310" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.310" endtime="20200302 13:45:34.310"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.310" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200302 13:45:34.310" endtime="20200302 13:45:34.310"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.310" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "notexist", "movieId": "notexist"} 
json=None</msg>
<msg timestamp="20200302 13:45:34.314" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.310" endtime="20200302 13:45:34.314"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200302 13:45:34.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.314" endtime="20200302 13:45:34.315"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.309" endtime="20200302 13:45:34.315" critical="yes"></status>
</test>
<test id="s1-t25" name="TestGetActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.316" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.315" endtime="20200302 13:45:34.316"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200302 13:45:34.316" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.316" endtime="20200302 13:45:34.316"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.316" level="INFO">${params} = {'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200302 13:45:34.316" endtime="20200302 13:45:34.316"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>headers=${header}</arg>
<arg>json=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.317" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm1'}</msg>
<msg timestamp="20200302 13:45:34.323" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.316" endtime="20200302 13:45:34.323"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.323" endtime="20200302 13:45:34.323"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.315" endtime="20200302 13:45:34.324" critical="yes"></status>
</test>
<test id="s1-t26" name="TestGetActorExistsButNoMovies200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.324" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.324" endtime="20200302 13:45:34.324"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200302 13:45:34.325" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.324" endtime="20200302 13:45:34.325"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.325" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200302 13:45:34.325" endtime="20200302 13:45:34.325"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>headers=${header}</arg>
<arg>json=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.325" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200302 13:45:34.330" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.325" endtime="20200302 13:45:34.330"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.330" endtime="20200302 13:45:34.330"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.324" endtime="20200302 13:45:34.331" critical="yes"></status>
</test>
<test id="s1-t27" name="TestGetActorBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.331" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.331" endtime="20200302 13:45:34.331"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.332" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.332" endtime="20200302 13:45:34.332"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>act=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.332" level="INFO">${params} = {'act': 'notexist'}</msg>
<status status="PASS" starttime="20200302 13:45:34.332" endtime="20200302 13:45:34.332"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.332" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'act': 'notexist'}</msg>
<msg timestamp="20200302 13:45:34.334" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.332" endtime="20200302 13:45:34.334"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.334" endtime="20200302 13:45:34.334"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.331" endtime="20200302 13:45:34.334" critical="yes"></status>
</test>
<test id="s1-t28" name="TestGetActorNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.335" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.335" endtime="20200302 13:45:34.335"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.335" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.335" endtime="20200302 13:45:34.335"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.336" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200302 13:45:34.336" endtime="20200302 13:45:34.336"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.336" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200302 13:45:34.339" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.336" endtime="20200302 13:45:34.339"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200302 13:45:34.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.339" endtime="20200302 13:45:34.340"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.335" endtime="20200302 13:45:34.340" critical="yes"></status>
</test>
<test id="s1-t29" name="TestGetMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.341" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.340" endtime="20200302 13:45:34.341"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.341" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.341" endtime="20200302 13:45:34.341"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.341" level="INFO">${params} = {'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200302 13:45:34.341" endtime="20200302 13:45:34.341"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.342" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movieId': 'tt1'}</msg>
<msg timestamp="20200302 13:45:34.346" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.341" endtime="20200302 13:45:34.346"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.346" endtime="20200302 13:45:34.347"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.340" endtime="20200302 13:45:34.347" critical="yes"></status>
</test>
<test id="s1-t30" name="TestGetMovieNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.347" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.347" endtime="20200302 13:45:34.348"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.348" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.348" endtime="20200302 13:45:34.348"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.348" level="INFO">${params} = {'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200302 13:45:34.348" endtime="20200302 13:45:34.348"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.348" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movieId': 'notexist'}</msg>
<msg timestamp="20200302 13:45:34.351" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.348" endtime="20200302 13:45:34.351"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200302 13:45:34.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.351" endtime="20200302 13:45:34.352"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.347" endtime="20200302 13:45:34.352" critical="yes"></status>
</test>
<test id="s1-t31" name="TestGetMovieBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.352" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.352" endtime="20200302 13:45:34.353"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.353" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.353" endtime="20200302 13:45:34.353"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movie=742053</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.353" level="INFO">${params} = {'movie': '742053'}</msg>
<status status="PASS" starttime="20200302 13:45:34.353" endtime="20200302 13:45:34.353"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.354" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movie': '742053'}</msg>
<msg timestamp="20200302 13:45:34.355" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.353" endtime="20200302 13:45:34.355"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.355" endtime="20200302 13:45:34.356"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.352" endtime="20200302 13:45:34.356" critical="yes"></status>
</test>
<test id="s1-t32" name="TestGetRelationship200True">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.356" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.356" endtime="20200302 13:45:34.356"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.357" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.356" endtime="20200302 13:45:34.357"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.357" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200302 13:45:34.357" endtime="20200302 13:45:34.357"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.357" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<msg timestamp="20200302 13:45:34.363" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.357" endtime="20200302 13:45:34.363"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.363" endtime="20200302 13:45:34.364"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>nm0000102</arg>
</arguments>
<status status="PASS" starttime="20200302 13:45:34.364" endtime="20200302 13:45:34.364"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>mv001</arg>
</arguments>
<status status="PASS" starttime="20200302 13:45:34.364" endtime="20200302 13:45:34.364"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>${true}</arg>
</arguments>
<status status="PASS" starttime="20200302 13:45:34.365" endtime="20200302 13:45:34.365"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.356" endtime="20200302 13:45:34.365" critical="yes"></status>
</test>
<test id="s1-t33" name="TestGetRelationshipIncompleteBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.365" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.365" endtime="20200302 13:45:34.366"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.366" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.366" endtime="20200302 13:45:34.366"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=9999</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.366" level="INFO">${params} = {'actor': '9999'}</msg>
<status status="PASS" starttime="20200302 13:45:34.366" endtime="20200302 13:45:34.366"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.366" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '9999'}</msg>
<msg timestamp="20200302 13:45:34.368" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.366" endtime="20200302 13:45:34.368"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.368" endtime="20200302 13:45:34.368"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.365" endtime="20200302 13:45:34.369" critical="yes"></status>
</test>
<test id="s1-t34" name="TestGetRelationshipBothNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.369" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.369" endtime="20200302 13:45:34.369"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.370" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.369" endtime="20200302 13:45:34.370"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.370" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200302 13:45:34.370" endtime="20200302 13:45:34.370"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.370" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<msg timestamp="20200302 13:45:34.374" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.370" endtime="20200302 13:45:34.374"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200302 13:45:34.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.374" endtime="20200302 13:45:34.374"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.369" endtime="20200302 13:45:34.374" critical="yes"></status>
</test>
<test id="s1-t35" name="TestGetRelationshipNoRel200False">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.375" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.375" endtime="20200302 13:45:34.375"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.375" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.375" endtime="20200302 13:45:34.375"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.376" level="INFO">${params} = {'actorId': 'nm2', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200302 13:45:34.376" endtime="20200302 13:45:34.376"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.376" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2', 'movieId': 'tt2'}</msg>
<msg timestamp="20200302 13:45:34.381" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.376" endtime="20200302 13:45:34.381"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.381" endtime="20200302 13:45:34.381"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>nm2</arg>
</arguments>
<status status="PASS" starttime="20200302 13:45:34.381" endtime="20200302 13:45:34.382"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>tt2</arg>
</arguments>
<status status="PASS" starttime="20200302 13:45:34.382" endtime="20200302 13:45:34.382"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>${false}</arg>
</arguments>
<status status="PASS" starttime="20200302 13:45:34.382" endtime="20200302 13:45:34.382"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.375" endtime="20200302 13:45:34.382" critical="yes"></status>
</test>
<test id="s1-t36" name="TestGetBaconNumber200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.383" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.383" endtime="20200302 13:45:34.383"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.384" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.383" endtime="20200302 13:45:34.384"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.384" level="INFO">${params} = {'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200302 13:45:34.384" endtime="20200302 13:45:34.384"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.384" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm1'}</msg>
<msg timestamp="20200302 13:45:34.390" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.384" endtime="20200302 13:45:34.390"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.390" endtime="20200302 13:45:34.390"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200302 13:45:34.390" endtime="20200302 13:45:34.391"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.383" endtime="20200302 13:45:34.391" critical="yes"></status>
</test>
<test id="s1-t37" name="Test2GetBaconNumberKevinBacon200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.391" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.391" endtime="20200302 13:45:34.391"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.392" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.391" endtime="20200302 13:45:34.392"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.392" level="INFO">${params} = {'actorId': 'nm0000102'}</msg>
<status status="PASS" starttime="20200302 13:45:34.392" endtime="20200302 13:45:34.392"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.392" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm0000102'}</msg>
<msg timestamp="20200302 13:45:34.395" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.392" endtime="20200302 13:45:34.395"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.395" endtime="20200302 13:45:34.396"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200302 13:45:34.396" endtime="20200302 13:45:34.396"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.391" endtime="20200302 13:45:34.396" critical="yes"></status>
</test>
<test id="s1-t38" name="TestGetBaconNumberBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.397" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.397" endtime="20200302 13:45:34.397"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.397" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.397" endtime="20200302 13:45:34.397"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=1001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.397" level="INFO">${params} = {'actor': '1001'}</msg>
<status status="PASS" starttime="20200302 13:45:34.397" endtime="20200302 13:45:34.398"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.398" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '1001'}</msg>
<msg timestamp="20200302 13:45:34.399" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.398" endtime="20200302 13:45:34.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.400" endtime="20200302 13:45:34.400"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.396" endtime="20200302 13:45:34.400" critical="yes"></status>
</test>
<test id="s1-t39" name="TestGetBaconNumberIdNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.400" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.400" endtime="20200302 13:45:34.401"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.401" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.401" endtime="20200302 13:45:34.401"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.401" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200302 13:45:34.401" endtime="20200302 13:45:34.401"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.402" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200302 13:45:34.404" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.401" endtime="20200302 13:45:34.404"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.404" endtime="20200302 13:45:34.405"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.400" endtime="20200302 13:45:34.405" critical="yes"></status>
</test>
<test id="s1-t40" name="TestGetBaconNumberPathNoExist200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.406" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.405" endtime="20200302 13:45:34.406"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.406" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.406" endtime="20200302 13:45:34.406"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.406" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200302 13:45:34.406" endtime="20200302 13:45:34.406"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.407" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200302 13:45:34.410" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.406" endtime="20200302 13:45:34.411"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200302 13:45:34.411" level="FAIL">404 != 200</msg>
<status status="FAIL" starttime="20200302 13:45:34.411" endtime="20200302 13:45:34.411"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200302 13:45:34.405" endtime="20200302 13:45:34.411" critical="yes">404 != 200</status>
</test>
<test id="s1-t41" name="TestBaconPath200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.412" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.412" endtime="20200302 13:45:34.412"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.412" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.412" endtime="20200302 13:45:34.412"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.412" level="INFO">${params} = {'actorId': 'nm3'}</msg>
<status status="PASS" starttime="20200302 13:45:34.412" endtime="20200302 13:45:34.412"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.413" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm3'}</msg>
<msg timestamp="20200302 13:45:34.427" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.412" endtime="20200302 13:45:34.427"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.427" endtime="20200302 13:45:34.427"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>2</arg>
</arguments>
<status status="PASS" starttime="20200302 13:45:34.427" endtime="20200302 13:45:34.428"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.411" endtime="20200302 13:45:34.428" critical="yes"></status>
</test>
<test id="s1-t42" name="TestBaconPathBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.428" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.428" endtime="20200302 13:45:34.429"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.429" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.429" endtime="20200302 13:45:34.429"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=3333</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.429" level="INFO">${params} = {'actor': '3333'}</msg>
<status status="PASS" starttime="20200302 13:45:34.429" endtime="20200302 13:45:34.429"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.429" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '3333'}</msg>
<msg timestamp="20200302 13:45:34.431" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.429" endtime="20200302 13:45:34.431"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.431" endtime="20200302 13:45:34.431"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.428" endtime="20200302 13:45:34.432" critical="yes"></status>
</test>
<test id="s1-t43" name="TestBaconPathIdNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.432" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.432" endtime="20200302 13:45:34.432"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.433" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.432" endtime="20200302 13:45:34.433"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.433" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200302 13:45:34.433" endtime="20200302 13:45:34.433"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.433" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200302 13:45:34.439" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.433" endtime="20200302 13:45:34.439"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200302 13:45:34.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.439" endtime="20200302 13:45:34.439"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200302 13:45:34.432" endtime="20200302 13:45:34.440" critical="yes"></status>
</test>
<test id="s1-t44" name="TestBaconPathPathNoExist200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200302 13:45:34.440" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200302 13:45:34.440" endtime="20200302 13:45:34.440"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200302 13:45:34.441" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200302 13:45:34.440" endtime="20200302 13:45:34.441"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200302 13:45:34.441" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200302 13:45:34.441" endtime="20200302 13:45:34.441"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200302 13:45:34.441" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200302 13:45:34.445" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200302 13:45:34.441" endtime="20200302 13:45:34.445"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200302 13:45:34.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200302 13:45:34.446" level="FAIL">404 != 200</msg>
<status status="FAIL" starttime="20200302 13:45:34.445" endtime="20200302 13:45:34.446"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200302 13:45:34.440" endtime="20200302 13:45:34.446" critical="yes">404 != 200</status>
</test>
<status status="FAIL" starttime="20200302 13:45:33.942" endtime="20200302 13:45:34.446"></status>
</suite>
<statistics>
<total>
<stat pass="41" fail="3">Critical Tests</stat>
<stat pass="41" fail="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="41" fail="3" id="s1" name="testPutAndGetTests">testPutAndGetTests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
